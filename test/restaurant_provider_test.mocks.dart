// Mocks generated by Mockito 5.3.0 from annotations
// in dicoding_restaurant_app/test/restaurant_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dicoding_restaurant_app/data/api/api_service.dart' as _i5;
import 'package:dicoding_restaurant_app/data/models/detail_restaurant_model.dart'
    as _i3;
import 'package:dicoding_restaurant_app/data/models/restaurant_model.dart'
    as _i2;
import 'package:dicoding_restaurant_app/data/models/search_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRestaurantResult_0 extends _i1.SmartFake
    implements _i2.RestaurantResult {
  _FakeRestaurantResult_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeRestaurantDetails_1 extends _i1.SmartFake
    implements _i3.RestaurantDetails {
  _FakeRestaurantDetails_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSearchRestaurant_2 extends _i1.SmartFake
    implements _i4.SearchRestaurant {
  _FakeSearchRestaurant_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i5.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.RestaurantResult> restaurantList() =>
      (super.noSuchMethod(Invocation.method(#restaurantList, []),
              returnValue: _i6.Future<_i2.RestaurantResult>.value(
                  _FakeRestaurantResult_0(
                      this, Invocation.method(#restaurantList, []))))
          as _i6.Future<_i2.RestaurantResult>);
  @override
  _i6.Future<_i3.RestaurantDetails> restaurantDetail(String? id) =>
      (super.noSuchMethod(Invocation.method(#restaurantDetail, [id]),
              returnValue: _i6.Future<_i3.RestaurantDetails>.value(
                  _FakeRestaurantDetails_1(
                      this, Invocation.method(#restaurantDetail, [id]))))
          as _i6.Future<_i3.RestaurantDetails>);
  @override
  _i6.Future<_i4.SearchRestaurant> searchRestaurant(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchRestaurant, [name]),
              returnValue: _i6.Future<_i4.SearchRestaurant>.value(
                  _FakeSearchRestaurant_2(
                      this, Invocation.method(#searchRestaurant, [name]))))
          as _i6.Future<_i4.SearchRestaurant>);
}
